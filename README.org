#+title: chezmoi.el

This package provides convenience functions for interacting with the [[https://chezmoi.io/][chezmoi]] dotfile management system via Emacs. These are mostly equivalents to functions like ~find-file~ and ~save-buffer~.

[[https://melpa.org/#/chezmoi][file:https://melpa.org/packages/chezmoi-badge.svg]]

* Installation
  Clone this repo or use a package manager. (Coming soon, installation via MELPA).

  Add keybindings to some functions. Or call using ~M-x <cmd>~.

 #+begin_src emacs-lisp :noweb yes
(global-set-key (kbd "C-c C f")  #'chezmoi-find)
(global-set-key (kbd "C-c C s")  #'chezmoi-write)
 #+end_src

* Usage
** Editing files

  One of the main goals of this package is to allow users to access their files managed by chezmoi and sync changes in the source state with the target state files that are used. Opening source state files is done using ~chezmoi-find~. This opens a buffer for the source state and adds a hook to sync it with the corresponding target state file when changes are saved. However, to prevent overwriting changes that were made to the target state file outside of the source state (such as by auto-generated content), this hook is only added when the source and target states are in sync at the time of opening.

  You can overwrite the target state file manually by calling ~chezmoi-write~ from within the buffer. Alternatively, you can overwrite the source state file with the content from the target state using ~chezmoi-write-from-target~. This can be performed for several files in a row using ~chezmoi-write-files~ and ~chezmoi-write-files-from-target~.

  Quickly jump to the corresponding target file or source file using ~chezmoi-open-other~.

** Comparing source and target states

   Emacs has a lovely package called ~ediff~ for comparing differences between files which is perfect for when the source and target states get out of sync. Quickly resolve inconsistencies between source and target states using ~chezmoi-ediff~. Or view the raw diff using ~chezmoi-diff~ if you prefer. Pipe this into your own diff workflow using ~(chezmoi-diff 1)~ to give raw diff input to some other diff management tool.

** Dired

   In a Dired buffer, add files to chezmoi by either moving to the file or marking some and calling ~chezmoi-dired-add-marked-files~.

* Functions

  Some functions provided are direct equivalents to common emacs functions.

| Function     | chezmoi equivalent | chezmoi.el                 |
|--------------+--------------------+----------------------------|
| find-file    | chezmoi edit       | ~chezmoi\vertfind~         |
| save-buffer  | chezmoi apply      | ~chezmoi\vertwrite~        |
| diff         | chezmoi diff       | ~chezmoi\vertdiff~         |
| ediff        | chezmoi merge      | ~chezmoi\vertediff~        |
| magit-status | chezmoi git status | ~chezmoi\vertmagit-status~ |

* Spacemacs layer
  Provided here is a sample layer for those who use Spacemacs. Add it by creating a Spacemacs layer called "chezmoi" and create a file in it called "packages.el" with the following code:

 #+begin_src emacs-lisp :noweb yes
(defconst chezmoi-packages
  '(
    chezmoi)
  "The list of Lisp packages required by the chezmoi layer.")


(defun chezmoi/init-chezmoi ()
  (use-package chezmoi
    :init
    (spacemacs/declare-prefix "f d" "chezmoi")

    (spacemacs/set-leader-keys
      "f d s" #'chezmoi-write
      "f d g" #'chezmoi-magit-status
      "f d d" #'chezmoi-diff
      "f d e" #'chezmoi-ediff
      "f d f" #'chezmoi-find
      "f d i" #'chezmoi-write-files-from-target
      "f d o" #'chezmoi-open-other)


    ;; I find this hook useful for my emacs config files generated through org-tangle.
    ;; (add-hook 'org-babel-post-tangle-hook #'(lambda () (let ((file (buffer-file-name)))
    ;;                                                 (when (string-match-p (expand-file-name "~/.local/share/chezmoi") file)
    ;;                                                   (if (= 0 (shell-command (concat "chezmoi apply --source-path " file)))
    ;;                                                       (message (concat "Chezmoi: Wrote to target " file))
    ;;                                                     (message "Chezmoi: Failed to write file"))))))
    ))
 #+end_src
